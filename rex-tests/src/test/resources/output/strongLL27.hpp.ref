// This file was generated on Sun Jun 6, 2021 17:04 (UTC+02) by REx v5.53 which is Copyright (c) 1979-2021 by Gunther Rademacher <grd@gmx.net>
// REx command line: -q strongLL27.ebnf -cpp -ll 27

#ifndef STRONGLL27_HPP
#define STRONGLL27_HPP

#include <stdio.h>
#include <string>
#include <algorithm>

class strongLL27
{
public:
  strongLL27(const wchar_t *string)
  {
    initialize(string);
  }

  virtual ~strongLL27()
  {
  }

  class ParseException
  {
  private:
    int begin, end, offending, expected, state;
    friend class strongLL27;

  protected:
    ParseException(int b, int e, int s, int o, int x)
    : begin(b), end(e), offending(o), expected(x), state(s)
    {
    }

  public:
    const wchar_t *getMessage() const
    {
      return offending < 0
           ? L"lexical analysis failed"
           : L"syntax error";
    }

    int getBegin() const {return begin;}
    int getEnd() const {return end;}
    int getState() const {return state;}
    int getOffending() const {return offending;}
    int getExpected() const {return expected;}
  };

  void initialize(const wchar_t *source)
  {
    input = source;
    reset(0, 0, 0);
  }

  const wchar_t *getInput() const
  {
    return input;
  }

  int getTokenOffset() const
  {
    return b0;
  }

  int getTokenEnd() const
  {
    return e0;
  }

  void reset(int l, int b, int e)
  {
            b0 = b; e0 = b;
    l1 = l; b1 = b; e1 = e;
    l2 = 0; b2 = 0; e2 = 0;
    l3 = 0; b3 = 0; e3 = 0;
    l4 = 0; b4 = 0; e4 = 0;
    l5 = 0; b5 = 0; e5 = 0;
    l6 = 0; b6 = 0; e6 = 0;
    l7 = 0; b7 = 0; e7 = 0;
    l8 = 0; b8 = 0; e8 = 0;
    l9 = 0; b9 = 0; e9 = 0;
    l10 = 0; b10 = 0; e10 = 0;
    l11 = 0; b11 = 0; e11 = 0;
    l12 = 0; b12 = 0; e12 = 0;
    l13 = 0; b13 = 0; e13 = 0;
    l14 = 0; b14 = 0; e14 = 0;
    l15 = 0; b15 = 0; e15 = 0;
    l16 = 0; b16 = 0; e16 = 0;
    l17 = 0; b17 = 0; e17 = 0;
    l18 = 0; b18 = 0; e18 = 0;
    l19 = 0; b19 = 0; e19 = 0;
    l20 = 0; b20 = 0; e20 = 0;
    l21 = 0; b21 = 0; e21 = 0;
    l22 = 0; b22 = 0; e22 = 0;
    l23 = 0; b23 = 0; e23 = 0;
    l24 = 0; b24 = 0; e24 = 0;
    l25 = 0; b25 = 0; e25 = 0;
    l26 = 0; b26 = 0; e26 = 0;
    l27 = 0; b27 = 0; e27 = 0;
    end = e;
  }

  void reset()
  {
    reset(0, 0, 0);
  }

  static const wchar_t *getOffendingToken(ParseException e)
  {
    return e.getOffending() < 0 ? 0 : TOKEN[e.getOffending()];
  }

  static void getExpectedTokenSet(const ParseException &e, const wchar_t **set, int size)
  {
    if (e.expected < 0)
    {
      getTokenSet(- e.state, set, size);
    }
    else if (size == 1)
    {
      set[0] = 0;
    }
    else if (size > 1)
    {
      set[0] = TOKEN[e.expected];
      set[1] = 0;
    }
  }

  static std::wstring to_wstring(int i)
  {
    const wchar_t *sign = i < 0 ? L"-" : L"";
    std::wstring a;
    do
    {
      a += L'0' + abs(i % 10);
      i /= 10;
    }
    while (i != 0);
    a += sign;
    std::reverse(a.begin(), a.end());
    return a;
  }

  std::wstring getErrorMessage(const ParseException &e)
  {
    std::wstring message(e.getMessage());
    const wchar_t *found = getOffendingToken(e);
    if (found != 0)
    {
      message += L", found ";
      message += found;
    }
    const wchar_t *expected[64];
    getExpectedTokenSet(e, expected, sizeof expected / sizeof *expected);
    message += L"\nwhile expecting ";
    const wchar_t *delimiter(expected[1] ? L"[" : L"");
    for (const wchar_t **x = expected; *x; ++x)
    {
      message += delimiter;
      message += *x;
      delimiter = L", ";
    }
    message += expected[1] ? L"]\n" : L"\n";
    int size = e.getEnd() - e.getBegin();
    if (size != 0 && found == 0)
    {
      message += L"after successfully scanning ";
      message += to_wstring(size);
      message += L" characters beginning ";
    }
    int line = 1;
    int column = 1;
    for (int i = 0; i < e.getBegin(); ++i)
    {
      if (input[i] == L'\n')
      {
        ++line;
        column = 1;
      }
      else
      {
        ++column;
      }
    }
    message += L"at line ";
    message += to_wstring(line);
    message += L", column ";
    message += to_wstring(column);
    message += L":\n...";
    const wchar_t *w = input + e.getBegin();
    for (int i = 0; i < 64 && *w; ++i)
    {
      message += *w++;
    }
    message += L"...";
    return message;
  }

  void parse_a()
  {
    lookahead1(0);                  // 'a'
    switch (l1)
    {
    case 2:                         // 'a'
      lookahead2(32, 1);            // 'b'
      switch (lk)
      {
      case 35:                      // 'a' 'b'
        lookahead3(64, 2);          // 'c'
        switch (lk)
        {
        case 68:                    // 'a' 'b' 'c'
          lookahead4(96, 3);        // 'd'
          switch (lk)
          {
          case 101:                 // 'a' 'b' 'c' 'd'
            lookahead5(128, 4);     // 'e'
            switch (lk)
            {
            case 134:               // 'a' 'b' 'c' 'd' 'e'
              lookahead6(160, 5);   // 'f'
              switch (lk)
              {
              case 167:             // 'a' 'b' 'c' 'd' 'e' 'f'
                lookahead7(192, 6); // 'g'
                switch (lk)
                {
                case 200:           // 'a' 'b' 'c' 'd' 'e' 'f' 'g'
                  lookahead8(224, 7); // 'h'
                  switch (lk)
                  {
                  case 233:         // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'
                    lookahead9(256, 8); // 'i'
                    switch (lk)
                    {
                    case 266:       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i'
                      lookahead10(288, 9);  // 'j'
                      switch (lk)
                      {
                      case 299:     // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j'
                        lookahead11(320, 10); // 'k'
                        switch (lk)
                        {
                        case 332:   // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k'
                          lookahead12(352, 11); // 'l'
                          switch (lk)
                          {
                          case 365: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l'
                            lookahead13(384, 12); // 'm'
                            switch (lk)
                            {
                            case 398: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm'
                              lookahead14(416, 13); // 'n'
                              switch (lk)
                              {
                              case 431: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'
                                lookahead15(448, 14); // 'o'
                                switch (lk)
                                {
                                case 464: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o'
                                  lookahead16(480, 15); // 'p'
                                  switch (lk)
                                  {
                                  case 497: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p'
                                    lookahead17(512, 16); // 'q'
                                    switch (lk)
                                    {
                                    case 530: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q'
                                      lookahead18(544, 17); // 'r'
                                      switch (lk)
                                      {
                                      case 563: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q'
                                                // 'r'
                                        lookahead19(576, 18); // 's'
                                        switch (lk)
                                        {
                                        case 596: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p'
                                                  // 'q' 'r' 's'
                                          lookahead20(608, 19); // 't'
                                          switch (lk)
                                          {
                                          case 629: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p'
                                                    // 'q' 'r' 's' 't'
                                            lookahead21(640, 20); // 'u'
                                            switch (lk)
                                            {
                                            case 662: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o'
                                                      // 'p' 'q' 'r' 's' 't' 'u'
                                              lookahead22(672, 21); // 'v'
                                              switch (lk)
                                              {
                                              case 695: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o'
                                                        // 'p' 'q' 'r' 's' 't' 'u' 'v'
                                                lookahead23(704, 22); // 'w'
                                                switch (lk)
                                                {
                                                case 728: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'
                                                          // 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w'
                                                  lookahead24(736, 23); // 'x'
                                                  switch (lk)
                                                  {
                                                  case 761: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'
                                                            // 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x'
                                                    lookahead25(768, 27); // 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' |
                                                                          // 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' |
                                                                          // 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' |
                                                                          // 'v' | 'w' | 'x' | 'y' | 'z'
                                                    switch (lk)
                                                    {
                                                    case 794: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm'
                                                              // 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y'
                                                      lookahead26(800, 27); // 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' |
                                                                            // 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' |
                                                                            // 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' |
                                                                            // 'v' | 'w' | 'x' | 'y' | 'z'
                                                      switch (lk)
                                                      {
                                                      case 827: // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm'
                                                                // 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z'
                                                        lookahead27(832, 26); // END | 'z'
                                                        break;
                                                      }
                                                      break;
                                                    }
                                                    break;
                                                  }
                                                  break;
                                                }
                                                break;
                                              }
                                              break;
                                            }
                                            break;
                                          }
                                          break;
                                        }
                                        break;
                                      }
                                      break;
                                    }
                                    break;
                                  }
                                  break;
                                }
                                break;
                              }
                              break;
                            }
                            break;
                          }
                          break;
                        }
                        break;
                      }
                      break;
                    }
                    break;
                  }
                  break;
                }
                break;
              }
              break;
            }
            break;
          }
          break;
        }
        break;
      }
      break;
    default:
      lk = l1;
      break;
    }
    switch (lk)
    {
    case 770:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'a'
    case 802:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'a'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(0);                // 'a'
      consume(2);                   // 'a'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 771:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'b'
    case 803:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'b'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 772:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'c'
    case 804:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'c'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 773:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'd'
    case 805:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'd'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 774:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'e'
    case 806:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'e'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 775:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'f'
    case 807:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'f'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 776:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'g'
    case 808:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'g'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 777:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'h'
    case 809:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'h'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 778:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'i'
    case 810:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'i'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 779:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'j'
    case 811:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'j'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 780:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'k'
    case 812:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'k'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 781:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'l'
    case 813:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'l'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 782:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'm'
    case 814:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'm'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 783:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'n'
    case 815:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'n'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 784:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'o'
    case 816:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'o'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 785:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'p'
    case 817:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'p'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 786:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'q'
    case 818:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'q'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 787:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'r'
    case 819:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'r'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 788:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 's'
    case 820:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 's'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 789:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 't'
    case 821:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 't'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 790:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'u'
    case 822:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'u'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 791:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'v'
    case 823:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'v'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 792:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'w'
    case 824:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'w'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 793:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'x'
    case 825:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'x'
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    case 826:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'y'
    case 833:                       // 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't'
                                    // 'u' 'v' 'w' 'x' 'y' 'z' END
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(24);               // 'y'
      consume(26);                  // 'y'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    default:
      consume(2);                   // 'a'
      lookahead1(1);                // 'b'
      consume(3);                   // 'b'
      lookahead1(2);                // 'c'
      consume(4);                   // 'c'
      lookahead1(3);                // 'd'
      consume(5);                   // 'd'
      lookahead1(4);                // 'e'
      consume(6);                   // 'e'
      lookahead1(5);                // 'f'
      consume(7);                   // 'f'
      lookahead1(6);                // 'g'
      consume(8);                   // 'g'
      lookahead1(7);                // 'h'
      consume(9);                   // 'h'
      lookahead1(8);                // 'i'
      consume(10);                  // 'i'
      lookahead1(9);                // 'j'
      consume(11);                  // 'j'
      lookahead1(10);               // 'k'
      consume(12);                  // 'k'
      lookahead1(11);               // 'l'
      consume(13);                  // 'l'
      lookahead1(12);               // 'm'
      consume(14);                  // 'm'
      lookahead1(13);               // 'n'
      consume(15);                  // 'n'
      lookahead1(14);               // 'o'
      consume(16);                  // 'o'
      lookahead1(15);               // 'p'
      consume(17);                  // 'p'
      lookahead1(16);               // 'q'
      consume(18);                  // 'q'
      lookahead1(17);               // 'r'
      consume(19);                  // 'r'
      lookahead1(18);               // 's'
      consume(20);                  // 's'
      lookahead1(19);               // 't'
      consume(21);                  // 't'
      lookahead1(20);               // 'u'
      consume(22);                  // 'u'
      lookahead1(21);               // 'v'
      consume(23);                  // 'v'
      lookahead1(22);               // 'w'
      consume(24);                  // 'w'
      lookahead1(23);               // 'x'
      consume(25);                  // 'x'
      parse_y();
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      lookahead1(25);               // 'z'
      consume(27);                  // 'z'
      break;
    }
  }

private:

  void parse_y()
  {
    lookahead1(27);                 // 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' |
                                    // 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'
    switch (l1)
    {
    case 26:                        // 'y'
      lookahead2(32, 27);           // 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' |
                                    // 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'
      switch (lk)
      {
      case 59:                      // 'y' 'z'
        lookahead3(64, 26);         // END | 'z'
        break;
      }
      break;
    default:
      lk = l1;
      break;
    }
    if (lk == 34                    // 'y' 'a'
     || lk == 35                    // 'y' 'b'
     || lk == 36                    // 'y' 'c'
     || lk == 37                    // 'y' 'd'
     || lk == 38                    // 'y' 'e'
     || lk == 39                    // 'y' 'f'
     || lk == 40                    // 'y' 'g'
     || lk == 41                    // 'y' 'h'
     || lk == 42                    // 'y' 'i'
     || lk == 43                    // 'y' 'j'
     || lk == 44                    // 'y' 'k'
     || lk == 45                    // 'y' 'l'
     || lk == 46                    // 'y' 'm'
     || lk == 47                    // 'y' 'n'
     || lk == 48                    // 'y' 'o'
     || lk == 49                    // 'y' 'p'
     || lk == 50                    // 'y' 'q'
     || lk == 51                    // 'y' 'r'
     || lk == 52                    // 'y' 's'
     || lk == 53                    // 'y' 't'
     || lk == 54                    // 'y' 'u'
     || lk == 55                    // 'y' 'v'
     || lk == 56                    // 'y' 'w'
     || lk == 57                    // 'y' 'x'
     || lk == 58                    // 'y' 'y'
     || lk == 91)                   // 'y' 'z' 'z'
    {
      consume(26);                  // 'y'
    }
  }

  void consume(int t)
  {
    if (l1 == t)
    {
      b0 = b1; e0 = e1; l1 = l2; if (l1 != 0) {
      b1 = b2; e1 = e2; l2 = l3; if (l2 != 0) {
      b2 = b3; e2 = e3; l3 = l4; if (l3 != 0) {
      b3 = b4; e3 = e4; l4 = l5; if (l4 != 0) {
      b4 = b5; e4 = e5; l5 = l6; if (l5 != 0) {
      b5 = b6; e5 = e6; l6 = l7; if (l6 != 0) {
      b6 = b7; e6 = e7; l7 = l8; if (l7 != 0) {
      b7 = b8; e7 = e8; l8 = l9; if (l8 != 0) {
      b8 = b9; e8 = e9; l9 = l10; if (l9 != 0) {
      b9 = b10; e9 = e10; l10 = l11; if (l10 != 0) {
      b10 = b11; e10 = e11; l11 = l12; if (l11 != 0) {
      b11 = b12; e11 = e12; l12 = l13; if (l12 != 0) {
      b12 = b13; e12 = e13; l13 = l14; if (l13 != 0) {
      b13 = b14; e13 = e14; l14 = l15; if (l14 != 0) {
      b14 = b15; e14 = e15; l15 = l16; if (l15 != 0) {
      b15 = b16; e15 = e16; l16 = l17; if (l16 != 0) {
      b16 = b17; e16 = e17; l17 = l18; if (l17 != 0) {
      b17 = b18; e17 = e18; l18 = l19; if (l18 != 0) {
      b18 = b19; e18 = e19; l19 = l20; if (l19 != 0) {
      b19 = b20; e19 = e20; l20 = l21; if (l20 != 0) {
      b20 = b21; e20 = e21; l21 = l22; if (l21 != 0) {
      b21 = b22; e21 = e22; l22 = l23; if (l22 != 0) {
      b22 = b23; e22 = e23; l23 = l24; if (l23 != 0) {
      b23 = b24; e23 = e24; l24 = l25; if (l24 != 0) {
      b24 = b25; e24 = e25; l25 = l26; if (l25 != 0) {
      b25 = b26; e25 = e26; l26 = l27; if (l26 != 0) {
      b26 = b27; e26 = e27; l27 = 0; }}}}}}}}}}}}}}}}}}}}}}}}}}
    }
    else
    {
      error(b1, e1, 0, l1, t);
    }
  }

  void lookahead1(int tokenSetId)
  {
    if (l1 == 0)
    {
      l1 = match(tokenSetId);
      b1 = begin;
      e1 = end;
    }
  }

  void lookahead2(int prefix, int tokenSetId)
  {
    if (l2 == 0)
    {
      l2 = match(tokenSetId);
      b2 = begin;
      e2 = end;
    }
    lk = prefix + l2;
  }

  void lookahead3(int prefix, int tokenSetId)
  {
    if (l3 == 0)
    {
      l3 = match(tokenSetId);
      b3 = begin;
      e3 = end;
    }
    lk = prefix + l3;
  }

  void lookahead4(int prefix, int tokenSetId)
  {
    if (l4 == 0)
    {
      l4 = match(tokenSetId);
      b4 = begin;
      e4 = end;
    }
    lk = prefix + l4;
  }

  void lookahead5(int prefix, int tokenSetId)
  {
    if (l5 == 0)
    {
      l5 = match(tokenSetId);
      b5 = begin;
      e5 = end;
    }
    lk = prefix + l5;
  }

  void lookahead6(int prefix, int tokenSetId)
  {
    if (l6 == 0)
    {
      l6 = match(tokenSetId);
      b6 = begin;
      e6 = end;
    }
    lk = prefix + l6;
  }

  void lookahead7(int prefix, int tokenSetId)
  {
    if (l7 == 0)
    {
      l7 = match(tokenSetId);
      b7 = begin;
      e7 = end;
    }
    lk = prefix + l7;
  }

  void lookahead8(int prefix, int tokenSetId)
  {
    if (l8 == 0)
    {
      l8 = match(tokenSetId);
      b8 = begin;
      e8 = end;
    }
    lk = prefix + l8;
  }

  void lookahead9(int prefix, int tokenSetId)
  {
    if (l9 == 0)
    {
      l9 = match(tokenSetId);
      b9 = begin;
      e9 = end;
    }
    lk = prefix + l9;
  }

  void lookahead10(int prefix, int tokenSetId)
  {
    if (l10 == 0)
    {
      l10 = match(tokenSetId);
      b10 = begin;
      e10 = end;
    }
    lk = prefix + l10;
  }

  void lookahead11(int prefix, int tokenSetId)
  {
    if (l11 == 0)
    {
      l11 = match(tokenSetId);
      b11 = begin;
      e11 = end;
    }
    lk = prefix + l11;
  }

  void lookahead12(int prefix, int tokenSetId)
  {
    if (l12 == 0)
    {
      l12 = match(tokenSetId);
      b12 = begin;
      e12 = end;
    }
    lk = prefix + l12;
  }

  void lookahead13(int prefix, int tokenSetId)
  {
    if (l13 == 0)
    {
      l13 = match(tokenSetId);
      b13 = begin;
      e13 = end;
    }
    lk = prefix + l13;
  }

  void lookahead14(int prefix, int tokenSetId)
  {
    if (l14 == 0)
    {
      l14 = match(tokenSetId);
      b14 = begin;
      e14 = end;
    }
    lk = prefix + l14;
  }

  void lookahead15(int prefix, int tokenSetId)
  {
    if (l15 == 0)
    {
      l15 = match(tokenSetId);
      b15 = begin;
      e15 = end;
    }
    lk = prefix + l15;
  }

  void lookahead16(int prefix, int tokenSetId)
  {
    if (l16 == 0)
    {
      l16 = match(tokenSetId);
      b16 = begin;
      e16 = end;
    }
    lk = prefix + l16;
  }

  void lookahead17(int prefix, int tokenSetId)
  {
    if (l17 == 0)
    {
      l17 = match(tokenSetId);
      b17 = begin;
      e17 = end;
    }
    lk = prefix + l17;
  }

  void lookahead18(int prefix, int tokenSetId)
  {
    if (l18 == 0)
    {
      l18 = match(tokenSetId);
      b18 = begin;
      e18 = end;
    }
    lk = prefix + l18;
  }

  void lookahead19(int prefix, int tokenSetId)
  {
    if (l19 == 0)
    {
      l19 = match(tokenSetId);
      b19 = begin;
      e19 = end;
    }
    lk = prefix + l19;
  }

  void lookahead20(int prefix, int tokenSetId)
  {
    if (l20 == 0)
    {
      l20 = match(tokenSetId);
      b20 = begin;
      e20 = end;
    }
    lk = prefix + l20;
  }

  void lookahead21(int prefix, int tokenSetId)
  {
    if (l21 == 0)
    {
      l21 = match(tokenSetId);
      b21 = begin;
      e21 = end;
    }
    lk = prefix + l21;
  }

  void lookahead22(int prefix, int tokenSetId)
  {
    if (l22 == 0)
    {
      l22 = match(tokenSetId);
      b22 = begin;
      e22 = end;
    }
    lk = prefix + l22;
  }

  void lookahead23(int prefix, int tokenSetId)
  {
    if (l23 == 0)
    {
      l23 = match(tokenSetId);
      b23 = begin;
      e23 = end;
    }
    lk = prefix + l23;
  }

  void lookahead24(int prefix, int tokenSetId)
  {
    if (l24 == 0)
    {
      l24 = match(tokenSetId);
      b24 = begin;
      e24 = end;
    }
    lk = prefix + l24;
  }

  void lookahead25(int prefix, int tokenSetId)
  {
    if (l25 == 0)
    {
      l25 = match(tokenSetId);
      b25 = begin;
      e25 = end;
    }
    lk = prefix + l25;
  }

  void lookahead26(int prefix, int tokenSetId)
  {
    if (l26 == 0)
    {
      l26 = match(tokenSetId);
      b26 = begin;
      e26 = end;
    }
    lk = prefix + l26;
  }

  void lookahead27(int prefix, int tokenSetId)
  {
    if (l27 == 0)
    {
      l27 = match(tokenSetId);
      b27 = begin;
      e27 = end;
    }
    lk = prefix + l27;
  }

  int error(int b, int e, int s, int l, int t)
  {
    throw ParseException(b, e, s, l, t);
  }

  int lk, b0, e0;
  int l1, b1, e1;
  int l2, b2, e2;
  int l3, b3, e3;
  int l4, b4, e4;
  int l5, b5, e5;
  int l6, b6, e6;
  int l7, b7, e7;
  int l8, b8, e8;
  int l9, b9, e9;
  int l10, b10, e10;
  int l11, b11, e11;
  int l12, b12, e12;
  int l13, b13, e13;
  int l14, b14, e14;
  int l15, b15, e15;
  int l16, b16, e16;
  int l17, b17, e17;
  int l18, b18, e18;
  int l19, b19, e19;
  int l20, b20, e20;
  int l21, b21, e21;
  int l22, b22, e22;
  int l23, b23, e23;
  int l24, b24, e24;
  int l25, b25, e25;
  int l26, b26, e26;
  int l27, b27, e27;

  const wchar_t *input;
  int begin;
  int end;

  int match(int tokenSetId)
  {
    begin = end;
    int current = end;
    int result = INITIAL[tokenSetId];
    int state = 0;

    for (int code = result & 31; code != 0; )
    {
      int charclass;
      int c0 = input[current];
      ++current;
      if (c0 < 0x80)
      {
        charclass = MAP0[c0];
      }
      else if (c0 < 0xd800)
      {
        int c1 = c0 >> 5;
        charclass = MAP1[(c0 & 31) + MAP1[(c1 & 31) + MAP1[c1 >> 5]]];
      }
      else
      {
        charclass = 0;
      }

      state = code;
      int i0 = (charclass << 5) + code - 1;
      code = TRANSITION[(i0 & 7) + TRANSITION[i0 >> 3]];
      if (code > 31)
      {
        result = code;
        code &= 31;
        end = current;
      }
    }

    result >>= 5;
    if (result == 0)
    {
      end = current - 1;
      int c1 = input[end];
      if (c1 >= 0xdc00 && c1 < 0xe000) --end;
      return error(begin, end, state, -1, -1);
    }

    if (input[begin] == 0) end = begin;
    return (result & 31) - 1;
  }

  static void getTokenSet(int tokenSetId, const wchar_t **set, int size)
  {
    int s = tokenSetId < 0 ? - tokenSetId : INITIAL[tokenSetId] & 31;
    for (int i = 0; i < 28; i += 32)
    {
      int j = i;
      for (unsigned int f = ec(i >> 5, s); f != 0; f >>= 1, ++j)
      {
        if ((f & 1) != 0)
        {
          if (size > 1)
          {
            set[0] = TOKEN[j];
            ++set;
            --size;
          }
        }
      }
    }
    if (size > 0)
    {
      set[0] = 0;
    }
  }

  static int ec(int t, int s)
  {
    int i0 = t * 27 + s - 1;
    return EXPECTED[i0];
  }

  static const int MAP0[];
  static const int MAP1[];
  static const int INITIAL[];
  static const int TRANSITION[];
  static const int EXPECTED[];
  static const wchar_t *TOKEN[];
};

const int strongLL27::MAP0[] =
{
/*   0 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/*  37 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/*  74 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
/* 109 */ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 0, 0, 0, 0
};

const int strongLL27::MAP1[] =
{
/*   0 */ 54, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
/*  27 */ 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
/*  54 */ 117, 117, 117, 90, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
/*  76 */ 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 0, 26, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
/* 102 */ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 134 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

const int strongLL27::INITIAL[] =
{
/*  0 */ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 90, 27
};

const int strongLL27::TRANSITION[] =
{
/*   0 */ 159, 159, 159, 159, 109, 159, 159, 108, 117, 159, 159, 117, 264, 159, 159, 265, 201, 159, 159, 203, 142, 159,
/*  22 */ 159, 145, 120, 159, 159, 128, 160, 159, 159, 139, 159, 158, 159, 156, 159, 169, 159, 168, 159, 177, 159, 177,
/*  44 */ 159, 278, 159, 279, 159, 215, 159, 217, 159, 180, 159, 183, 159, 148, 159, 197, 159, 228, 159, 211, 159, 159,
/*  66 */ 227, 225, 159, 159, 237, 236, 159, 159, 245, 245, 159, 159, 292, 293, 159, 159, 249, 251, 159, 159, 186, 189,
/*  88 */ 159, 159, 131, 259, 159, 159, 310, 273, 159, 159, 159, 287, 159, 159, 159, 301, 309, 159, 159, 307, 0, 0, 128,
/* 111 */ 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 800, 0, 0, 0, 320, 0, 0,
/* 144 */ 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 544, 0, 0, 0, 352, 0, 0, 0, 0, 0, 0, 0, 0, 320, 0, 0, 384, 0, 0, 0, 0, 0, 0,
/* 177 */ 0, 0, 416, 0, 0, 0, 0, 0, 512, 0, 0, 0, 0, 0, 768, 0, 0, 0, 0, 0, 0, 0, 544, 0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
/* 210 */ 0, 0, 0, 576, 0, 0, 0, 0, 0, 480, 0, 0, 0, 0, 0, 0, 0, 608, 0, 0, 0, 0, 0, 0, 0, 576, 0, 0, 640, 0, 0, 0, 0,
/* 243 */ 0, 0, 0, 0, 672, 0, 0, 0, 0, 0, 736, 0, 0, 0, 0, 0, 0, 0, 800, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 832,
/* 276 */ 0, 0, 0, 0, 0, 448, 0, 0, 0, 0, 0, 864, 0, 864, 0, 0, 0, 0, 0, 704, 0, 0, 0, 0, 0, 0, 896, 896, 0, 0, 0, 0, 0,
/* 309 */ 96, 0, 0, 0, 0, 0, 0, 0, 832
};

const int strongLL27::EXPECTED[] =
{
/*  0 */ 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576,
/* 19 */ 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435452
};

const wchar_t *strongLL27::TOKEN[] =
{
  L"(0)",
  L"END",
  L"'a'",
  L"'b'",
  L"'c'",
  L"'d'",
  L"'e'",
  L"'f'",
  L"'g'",
  L"'h'",
  L"'i'",
  L"'j'",
  L"'k'",
  L"'l'",
  L"'m'",
  L"'n'",
  L"'o'",
  L"'p'",
  L"'q'",
  L"'r'",
  L"'s'",
  L"'t'",
  L"'u'",
  L"'v'",
  L"'w'",
  L"'x'",
  L"'y'",
  L"'z'"
};

#endif

// End
