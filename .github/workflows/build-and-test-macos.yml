name: Build REx and run tests (macOS)

on:
  workflow_dispatch:
    inputs:
      xcode_version:
        description: "Specify Xcode version, e.g. Xcode_16.2.app (leave blank for latest available)"
        required: false
        default: ""
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 4 * * 6'

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 45

    steps:
      - name: Select Xcode Version
        run: |
          ls /Applications | grep Xcode

          if [ -n "${{ inputs.xcode_version }}" ]; then
            selected_xcode="/Applications/${{ inputs.xcode_version }}"
            if [ ! -d "$selected_xcode" ]; then
              echo "❌ Error: Specified Xcode version $selected_xcode does not exist!"
              exit 1
            fi
            echo "✅ Using requested Xcode version: $selected_xcode"
          else
            selected_xcode=$(ls -d /Applications/Xcode*.app | sort -V | tail -n 1)
            echo "✅ Using latest Xcode version: $selected_xcode"
          fi

          sudo xcode-select -s "$selected_xcode/Contents/Developer"
          clang --version

      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Build C++ Project
        run: rex/scripts/build-clang.sh

      - name: Add Executable to PATH
        run: echo "$(pwd)/rex/build/bin" >> $GITHUB_PATH

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Haxe
        run: brew install haxe

      - name: Install TypeScript
        run: npm install -g typescript

      - name: Install Scala
        run: brew install scala

      - name: Install Go
        run: brew install go

      - name: Run Gradle Tests
        working-directory: rex-tests
        run: ./gradlew test

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: rex-tests/build/test-results/test

      - name: Upload JUnit HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: rex-tests/build/reports/tests/test

      - name: Upload Test Summary
        if: always()
        run: cat rex-tests/build/test-results/test-summary.md >> $GITHUB_STEP_SUMMARY
